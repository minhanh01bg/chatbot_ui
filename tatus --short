warning: in the working copy of 'components/admin/Navbar.tsx', LF will be replaced by CRLF the next time Git touches it
warning: in the working copy of 'components/admin/Sidebar.tsx', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/.env.example b/.env.example[m
[1mindex eb60e62..d694610 100644[m
[1m--- a/.env.example[m
[1m+++ b/.env.example[m
[36m@@ -3,7 +3,7 @@[m [mNEXTAUTH_URL="http://localhost:3000"[m
 NEXTAUTH_SECRET="your-secret-key-here"[m
 [m
 # Backend API[m
[31m-NEXT_PUBLIC_BACKEND_URL="http://localhost:8001"[m
[32m+[m[32mNEXT_PUBLIC_BACKEND_URL="http://127.0.0.1:8001"[m
 [m
 # PayPal Configuration[m
 # Get these from https://developer.paypal.com/[m
[1mdiff --git a/app/(auth)/auth.ts b/app/(auth)/auth.ts[m
[1mindex bd6573f..fd7b7c8 100644[m
[1m--- a/app/(auth)/auth.ts[m
[1m+++ b/app/(auth)/auth.ts[m
[36m@@ -100,13 +100,6 @@[m [mexport const {[m
   callbacks: {[m
     // Add timestamp to ensure token is always refreshed[m
     async jwt({ token, user }) {[m
[31m-      console.log('JWT callback called with:', {[m
[31m-        hasUser: !!user,[m
[31m-        hasToken: !!token,[m
[31m-        tokenId: token?.id,[m
[31m-        tokenAccessToken: token?.accessToken ? 'exists' : 'none'[m
[31m-      });[m
[31m-[m
       if (user) {[m
         const customUser = user as CustomUser;[m
         token.id = customUser.id;[m
[36m@@ -142,14 +135,6 @@[m [mexport const {[m
       session: ExtendedSession;[m
       token: any;[m
     }) {[m
[31m-      console.log('Session callback called with:', {[m
[31m-        hasSession: !!session,[m
[31m-        hasUser: !!session?.user,[m
[31m-        hasToken: !!token,[m
[31m-        tokenAccessToken: token?.accessToken ? 'exists' : 'none',[m
[31m-        tokenRole: token?.role[m
[31m-      });[m
[31m-[m
       if (session.user) {[m
         session.user.id = token.id as string;[m
         // Add token information to session[m
[1mdiff --git a/app/(auth)/login/page.tsx b/app/(auth)/login/page.tsx[m
[1mindex f264830..4e1f9a1 100644[m
[1m--- a/app/(auth)/login/page.tsx[m
[1m+++ b/app/(auth)/login/page.tsx[m
[36m@@ -4,23 +4,21 @@[m [mimport Link from 'next/link';[m
 import { useRouter, useSearchParams } from 'next/navigation';[m
 import { useActionState, useEffect, useState } from 'react';[m
 import { toast } from 'sonner';[m
[32m+[m[32mimport { motion, AnimatePresence } from 'framer-motion';[m
[32m+[m[32mimport { Bot, Eye, EyeOff, Mail, Lock, ArrowRight, LogIn, Shield } from 'lucide-react';[m
 [m
[31m-import { AuthForm } from '@/components/auth-form';[m
[31m-import { SubmitButton } from '@/components/submit-button';[m
[31m-import { AuthGuard } from '@/components/auth-guard';[m
 import { clearAllAuthData } from '@/lib/auth-utils';[m
[31m-import { Button } from '@/components/ui/button';[m
[31m-import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';[m
[31m-import { Separator } from '@/components/ui/separator';[m
[31m-[m
 import { login, type LoginActionState } from '../actions';[m
 [m
[31m-export default function Page() {[m
[32m+[m[32mexport default function LoginPage() {[m
   const router = useRouter();[m
   const searchParams = useSearchParams();[m
 [m
   const [identifier, setIdentifier] = useState('');[m
[32m+[m[32m  const [password, setPassword] = useState('');[m
[32m+[m[32m  const [showPassword, setShowPassword] = useState(false);[m
   const [isSuccessful, setIsSuccessful] = useState(false);[m
[32m+[m[32m  const [isLoading, setIsLoading] = useState(false);[m
 [m
   const [state, formAction] = useActionState<LoginActionState, FormData>([m
     login,[m
[36m@@ -62,8 +60,7 @@[m [mexport default function Page() {[m
     } else if (state.status === 'invalid_data') {[m
       toast.error('Please enter a valid username and password (minimum 6 characters).');[m
     } else if (state.status === 'success') {[m
[31m-      toast.success('Login successful!');[m
[31m-      console.log(state);[m
[32m+[m[32m      toast.success('Login successful! Welcome back to ChatAI Pro!');[m
       setIsSuccessful(true);[m
       [m
       // Save access token to localStorage if available and sync with server cookies[m
[36m@@ -193,144 +190,262 @@[m [mexport default function Page() {[m
       });[m
 [m
       // Redirect immediately to admin dashboard[m
[31m-      router.push('/admin');[m
[32m+[m[32m      setTimeout(() => {[m
[32m+[m[32m        router.push('/admin');[m
[32m+[m[32m      }, 1500);[m
     }[m
   }, [state, router, searchParams]);[m
 [m
[31m-  const handleSubmit = (formData: FormData) => {[m
[31m-    setIdentifier(formData.get('identifier') as string);[m
[32m+[m[32m  const handleSubmit = async (e: React.FormEvent) => {[m
[32m+[m[32m    e.preventDefault();[m
[32m+[m[41m    [m
[32m+[m[32m    if (!identifier || !password) {[m
[32m+[m[32m      toast.error('Please enter both username/email and password');[m
[32m+[m[32m      return;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    setIsLoading(true);[m
[32m+[m[41m    [m
[32m+[m[32m    const formData = new FormData();[m
[32m+[m[32m    formData.append('identifier', identifier);[m
[32m+[m[32m    formData.append('password', password);[m
[32m+[m[41m    [m
     formAction(formData);[m
[32m+[m[41m    [m
[32m+[m[32m    setTimeout(() => setIsLoading(false), 1000);[m
   };[m
 [m
   return ([m
[31m-    <AuthGuard redirectTo="/admin" redirectIfAuthenticated={true}>[m
[31m-      <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-purple-900 p-4">[m
[31m-        {/* Background decoration */}[m
[31m-        <div className="absolute inset-0 overflow-hidden">[m
[31m-          <div className="absolute -top-40 -right-40 w-80 h-80 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob"></div>[m
[31m-          <div className="absolute -bottom-40 -left-40 w-80 h-80 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000"></div>[m
[31m-          <div className="absolute top-40 left-40 w-80 h-80 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000"></div>[m
[31m-        </div>[m
[32m+[m[32m    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden">[m
[32m+[m[32m      {/* Animated Background Elements */}[m
[32m+[m[32m      <div className="absolute inset-0 overflow-hidden">[m
[32m+[m[32m        <motion.div[m
[32m+[m[32m          className="absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-20"[m
[32m+[m[32m          animate={{[m
[32m+[m[32m            scale: [1, 1.2, 1],[m
[32m+[m[32m            rotate: [0, 180, 360],[m
[32m+[m[32m          }}[m
[32m+[m[32m          transition={{[m
[32m+[m[32m            duration: 20,[m
[32m+[m[32m            repeat: Infinity,[m
[32m+[m[32m            ease: "linear"[m
[32m+[m[32m          }}[m
[32m+[m[32m        />[m
[32m+[m[32m        <motion.div[m
[32m+[m[32m          className="absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-20"[m
[32m+[m[32m          animate={{[m
[32m+[m[32m            scale: [1.2, 1, 1.2],[m
[32m+[m[32m            rotate: [360, 180, 0],[m
[32m+[m[32m          }}[m
[32m+[m[32m          transition={{[m
[32m+[m[32m            duration: 25,[m
[32m+[m[32m            repeat: Infinity,[m
[32m+[m[32m            ease: "linear"[m
[32m+[m[32m          }}[m
[32m+[m[32m        />[m
[32m+[m[32m      </div>[m
 [m
[31m-        <div className="relative w-full max-w-md">[m
[31m-          <Card className="backdrop-blur-sm bg-white/80 dark:bg-gray-900/80 border-0 shadow-2xl">[m
[31m-            <CardHeader class